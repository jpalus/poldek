dnl Process this file with autoconf to produce a configure script.
dnl $Id$

AC_INIT(poldek,0.19.0)
AC_CONFIG_SRCDIR([capreq.c])

PACKAGE_BUGREPORT="mis@pld.org.pl"
VERSION_STATUS="devel"
VERSION=0.19.0
VERSION_TAG=$(echo $VERSION | sed 's/\./_/g')
VERSION_CVSTAG="v$VERSION_TAG"
PACKAGE_VERSION_SERIES="2"
AH_TEMPLATE([ENABLE_TRACE],[])
AH_TEMPLATE([HAVE_RPM_4_0_4],[])
AH_TEMPLATE([HAVE_RPM_4_1],[])
AH_TEMPLATE([HAVE_RPM_4_2],[])
AH_TEMPLATE([HAVE_RPM_EXTDEPS],[])
AH_TEMPLATE([HAVE_TM_GMTOFF],[])
AH_TEMPLATE([HAVE_TM___GMTOFF],[])

AM_INIT_AUTOMAKE([dist-bzip2])
AC_DEFINE_UNQUOTED([VERSION_STATUS], "$VERSION_STATUS", [version status])
AC_DEFINE_UNQUOTED([PACKAGE_VERSION_FUNCNAME],
                   ${PACKAGE}_version_${VERSION_TAG},  [ version function name ])

AC_DEFINE_UNQUOTED([PACKAGE_SERIES_FUNCNAME],
                   ${PACKAGE}_version_series_${PACKAGE_VERSION_SERIES},  
                    [ series function name ])

if test "X${VERSION_STATUS}" = "Xdevel"; then  
    AC_DEFINE([DEVEL], 1, [ am I development release?  ])
fi

AC_SUBST(VERSION_CVSTAG)
#AC_CONFIG_HEADERS([config.h])
AM_CONFIG_HEADER([config.h])

ALL_LINGUAS="pl de"

dnl cond. building NFY 
dnl AC_DEFINE([ENABLE_VFILE_TRURLIO],1,[defined if trurlio is used for vfile operations])

AC_DISABLE_STATIC

dnl Checks for programs.
AC_PROG_LIBTOOL
AC_PROG_CC()
#AC_PROG_CXX()
AC_C_INLINE
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LN_S
AC_CHECK_PROG(POD2MAN, pod2man, pod2man)
AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.11.5)

AM_CFLAGS="-Wall -W"
AC_SUBST(AM_CFLAGS)


dnl Process features.
AC_CHECK_LIB(tinfo, tigetstr,,[
	AC_CHECK_LIB(ncurses, tigetstr, ,[ 
		AC_MSG_ERROR(["tinfo nor ncurses not found"]) ]) ])

AC_CHECK_HEADERS(ncurses/curses.h,
	[ CPPFLAGS="-I/usr/include/ncurses $CPPFLAGS" ],
	[ AC_CHECK_HEADERS(curses.h,, [AC_MSG_ERROR(["curses.h not found"])],) ])

AC_ARG_ENABLE(imode,
[  --disable-imode               turn off interactive mode],
INTERACTIVE_MODE=$enableval, INTERACTIVE_MODE=yes)

if test "${INTERACTIVE_MODE}." != "yes."; then
	AM_CONDITIONAL(ENABLE_INTERACTIVE_MODE, false)
else
	AC_CHECK_LIB(readline, readline,,[ AC_MSG_ERROR(["readline not found"])])
	AC_CHECK_LIB(pcre, pcre_compile,,[ AC_MSG_ERROR(["pcre not found"])])
	AC_CHECK_HEADERS(pcre.h,,[ 
		AC_CHECK_HEADERS(pcre/pcre.h, 
			         [CPPFLAGS="-I/usr/include/pcre $CPPFLAGS"], )], )

	AM_CONDITIONAL(ENABLE_INTERACTIVE_MODE, true)
	AC_DEFINE([ENABLE_INTERACTIVE_MODE],1,[defined if interactive mode is requested])

	AC_CHECK_FUNCS(rl_completion_matches, have_rl_4_2=yes, have_rl_4_2=no,
		     $CONF_IN_LDFLAGS)
	if test "${have_rl_4_2}." = "yes."; then
		AC_DEFINE([HAVE_READLINE_4_2],1,[defined if readline 4.2 is avialiable])
	fi
fi

dnl curl module is obsoleted 
# AC_ARG_WITH(curl,
# [  --with-curl	compile with libcurl],
# ENABLE_VFILE_CURL=$enableval, ENABLE_VFILE_CURL=no)
# if test "${ENABLE_VFILE_CURL}." != "yes."; then
#	AM_CONDITIONAL(ENABLE_VFILE_CURL, false)
# else
#	AC_CHECK_LIB(curl, curl_easy_init,,AC_MSG_ERROR(["libcurl not found"]))
#	AM_CONDITIONAL(ENABLE_VFILE_CURL, true)
#	AC_DEFINE([ENABLE_VFILE_CURL],1,[defined if curl support is requested])
# fi


AC_ARG_WITH(sys-trurlib,
[  --with-sys-trurlib	compile and link with system installed trurlib],
ENABLE_SYS_TRURL=$enableval, ENABLE_SYS_TRURL=no)


AC_ARG_ENABLE(static,
[  --enable-static       build static binary],
ENABLE_STATIC=$enableval, ENABLE_STATIC=no)

if test "${ENABLE_STATIC}." = "yes."; then
	AC_DEFINE([ENABLE_STATIC],1, [defined if static linking is requested])
	poldek_LDFLAGS="-static"

	if test "${INTERACTIVE_MODE}." = "yes."; then
		LIBS="$LIBS -lncurses"
	fi

#	if test "${ENABLE_VFILE_CURL}." = "yes."; then
#		LIBS="$LIBS $(curl-config --libs)"
#	fi
fi

AC_SUBST(poldek_LDFLAGS)


AC_ARG_ENABLE(trace,
[  --enable-trace		turn on trace messages],
ENABLE_TRACE=$enableval, ENABLE_TRACE=no)

if test "${ENABLE_TRACE}." = "yes."; then
	AC_DEFINE([ENABLE_TRACE],1,[])
fi


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME


AC_CHECK_MEMBER(struct tm.tm_gmtoff,
	[AC_DEFINE([HAVE_TM_GMTOFF],1,[])],
	[AC_CHECK_MEMBER(struct tm.__tm_gmtoff,[ AC_DEFINE([HAVE_TM___GMTOFF],1,[])]
	,,[#include <time.h>])],
[#include <time.h>])


dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_FNMATCH
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday mkdir strdup uname mkdtemp)
AC_CHECK_FUNCS(strerror strstr strtol strtoul strsignal)
AC_CHECK_FUNCS(mallopt)
AC_CHECK_FUNCS(ngettext setlocale)
AC_CHECK_FUNCS(setenv)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h locale.h)
AC_CHECK_HEADERS(sys/file.h sys/time.h syslog.h unistd.h)

AC_CHECK_HEADER(stdint.h,,AC_MSG_ERROR(["C9X compiler is needed by $PACKAGE"]))
AC_CHECK_HEADER(obstack.h,,AC_MSG_ERROR(["obstacks are needed by $PACKAGE"]))
AC_CHECK_HEADER(argp.h,,AC_MSG_ERROR(["missing required argp.h"]))

dnl RH rpm needs this
CPPFLAGS="-I/usr/include/rpm $CPPFLAGS"
AC_CHECK_HEADER(rpm/rpmlib.h,,AC_MSG_ERROR(["missing required rpmlib.h"]))

AC_MSG_CHECKING([for rpm 4.x])
#RPMDBI_PACKAGES
AC_EGREP_CPP(yes,
     [#include <rpm/rpmlib.h>
      #ifdef RPMDBI_PACKAGES
       yes
      #endif
     ], is_rpm4=yes, is_rpm4=no)

if test ${is_rpm4}. = yes. ; then
	AC_MSG_RESULT(yes)
	AC_DEFINE([HAVE_RPM_4_0],1,[defined if rpm 4.x is installed])
	AC_EGREP_CPP(RPMSENSE_SCRIPT_PRE,
		[ #include <rpm/rpmlib.h>
		], is_rpm_extdeps=yes, is_rpm_extdeps=no)
	if test ${is_rpm_extdeps}. = yes. ; then
		AC_DEFINE([HAVE_RPM_EXTDEPS])
	fi

	AC_MSG_CHECKING([for rpm >= 4.0.4])
	AC_EGREP_CPP(RPMSENSE_KEYRING,
		[ #include <rpm/rpmcli.h>
		], is_rpm4_0_4=yes, is_rpm4_0_4=no)

	if test ${is_rpm4_0_4}. = yes. ; then
		AC_DEFINE([HAVE_RPM_4_0_4],1,[])
		CFLAGS="$CFLAGS -D_REENTRANT"
		AC_MSG_RESULT(yes)
	else 
	        AC_MSG_RESULT(no)
	fi
else
	AC_MSG_RESULT(no)
fi

dnl Checks for libraries.
AC_CHECK_LIB(bz2, BZ2_bzCompress)
AC_CHECK_LIB(z, gzopen)

DBLIB=""
if test ${is_rpm4_0_4}. = no. ; then
	dnl tocheck: -ldb-3.1 causes link with static lib from /usr/lib
	dnl instead shared one from /lib
	#AC_CHECK_LIB(db-3.1, db_create, [DBLIB="-ldb-3.1"],
	#  AC_CHECK_LIB(db-3.0, db_create, [DBLIB="-ldb-3.0"],
	#    AC_CHECK_LIB(db, db_create, [DBLIB="-ldb"])
	#  )
	#)
	CPPFLAGS="-I/usr/include/db3 $CPPFLAGS"
	
	AC_CHECK_LIB(db, db_create, [DBLIB="-ldb"],,[$LIBS])
	# assume that librpm complied with --enable-db1
	if test "${ENABLE_STATIC}." = "yes."; then 
		DBLIB="$DBLIB -ldb1"
	fi
else
    AC_CHECK_LIB(db4, db_create, [DBLIB="-ldb4"],
        [AC_CHECK_LIB(db-4.1, db_create, [DBLIB="-ldb-4.1"],
             [AC_CHECK_LIB(db-4.0, db_create, [DBLIB="-ldb-4.0"],
                     [AC_CHECK_LIB(db, db_create, [DBLIB="-ldb"],,[$LIBS])],
                     [$LIBS])],, [$LIBS])],, [$LIBS])

	if test "${ENABLE_STATIC}." = "yes."; then 
		DBLIB="$DBLIB"
	fi

	CPPFLAGS="-I/usr/include/db4 $CPPFLAGS"
fi


AC_CHECK_LIB(popt, poptReadConfigFile)

if test ${is_rpm4_0_4}. = yes. ; then	
	AC_CHECK_LIB(beecrypt, dhaes_pContextInitEncrypt, 
	have_beecrypt=yes, have_beecrypt=no)
fi

if test ${is_rpm4}. = yes. ; then
	AC_CHECK_LIB(rpmio, rpmCleanPath,,AC_MSG_ERROR(["rpmio not found"]))
fi


AC_CHECK_LIB(rpm, rpmReadPackageInfo,[LIBS="-lrpm $LIBS $DBLIB"],
	AC_CHECK_LIB(rpm, rpmReadPackageHeader,
		[LIBS="-lrpm -lrpmdb $DBLIB $LIBS"],
		AC_CHECK_LIB(rpm, rpmReadPackageFile,
			[LIBS="$LIBS -lrpm -lrpmdb $DBLIB $LIBS"
			 AC_DEFINE([HAVE_RPM_4_1],1,[])],
			AC_MSG_ERROR(["rpmlib not found"]),
			[$DBLIB -lrpmdb]),
		[$DBLIB -lrpmdb]),
	    [$DBLIB])

AC_CHECK_FUNCS(rpmMachineScore,,[ AC_MSG_ERROR(["rpmlib not found"])])
AC_CHECK_FUNCS(rpmlog rpmCheckSig rpmVerifySignature)

dnl rpm 4.2?
AC_CHECK_FUNCS(rpmtsColor, [LIBS="$LIBS -lpthread"
                            AC_DEFINE([HAVE_RPM_4_2],1,[])])


AC_CHECK_HEADERS(db_185.h,,[ 
	AC_MSG_WARN(["disabled synchronization with db file-dependencies"]) ])
AC_CHECK_FUNCS(__db185_open)

dnl 4.0.4 has cross dependenecies(?)
if test ${is_rpm4_0_4}. = yes. -a ${ENABLE_STATIC}. = yes. ; then
	if ${have_beecrypt}. = yes. ; then
		LIBS="$LIBS -lbz2 -lrpmio -lbeecrypt -lpthread"
	fi
	LIBS="$LIBS -lbz2 -lrpmio"
fi

AC_CHECK_FUNCS(getline,,, $CONF_IN_LDFLAGS)
AC_CHECK_FUNCS(fopencookie,,, $CONF_IN_LDFLAGS)

AC_CHECK_FUNCS(openpty,,
	       AC_CHECK_LIB(util, openpty, 
	[AC_DEFINE([HAVE_OPENPTY],1,[defined if openpty() is avialable])] [LIBS="-lutil $LIBS"]))

AC_CHECK_FUNCS(rpmGetRpmlibProvides,,
	[AC_MSG_WARN("[poldek will not work fine with rpmlib\(...\) capabilities"])],
	[$CONF_IN_LDFLAGS])


AC_CHECK_FUNCS(EVP_DigestInit,,
	[AC_CHECK_LIB(crypto, EVP_DigestInit,,
	 [AC_MSG_ERROR(["libcryto is needed by $PACKAGE"])]
	)], 
	[$CONF_IN_LDFLAGS])

if test -f /etc/redhat-release; then
        LIBS="$LIBS -ldl" # rh's crypto needs this 
fi


dnl use local ../trurlib copy if it exists
CONF_IN_LDFLAGS=

if test "${ENABLE_SYS_TRURL}." == "no."; then
	if test -f "${srcdir}/trurlib/n_array_new.c"; then
		TRURL_DIR="trurlib"
	fi
fi

AC_SUBST(TRURL_DIR)

if test -n "$TRURL_DIR"; then
	AC_MSG_CHECKING(for local trurlib copy in $TRURL_DIR)
	AC_MSG_RESULT([yes])
	TRURL_INCLUDE="-I\$(top_srcdir)/$TRURL_DIR/include"
	TRURL_LDFLAG="-L\$(top_srcdir)/$TRURL_DIR/"
	LDFLAGS="$LDFLAGS $TRURL_LDFLAG"
	CPPFLAGS="$CPPFLAGS $TRURL_INCLUDE"
	LIBS="-ltrurl $LIBS"
else
	AC_CHECK_HEADER(trurl/trurl.h,,AC_MSG_ERROR("trurl.h is missing"))
	AC_CHECK_LIB(trurl, n_cfree)
fi

AC_SUBST(TRURL_INCLUDE)
AC_SUBST(TRURL_LDFLAG)

dnl verify trurlib's version
TN_TEST_INCLUDE="<trurl/nstream.h>"
if test -z "$TRURL_DIR"; then
	AC_CHECK_LIB(trurl, n_stream_open,,
		[AC_MSG_ERROR(["trurlib >= 0.44.0 not found"])], [-Ltrurlib])
else
	AC_CONFIG_SUBDIRS(trurlib)
	TN_TEST_INCLUDE="\"$srcdir/$TRURL_DIR/include/trurl/nstream.h\""
fi

AC_MSG_CHECKING([for trullib >= 0.44.0])
AC_EGREP_CPP(yes,
       [#include $TN_TEST_INCLUDE
        #ifdef TN_STREAM_STDIO
          yes
        #endif
       ], is_valid_trurlib_ver=yes, is_valid_trurlib_ver=no)

if test ${is_valid_trurlib_ver}. = no. ; then
	AC_MSG_RESULT(no)		
   	AC_MSG_ERROR(["trurlib >= 0.44.0 not found"])
else
	AC_MSG_RESULT(yes)	
fi

dnl use local tndb copy if it exists
ENABLE_SYS_TNDB="no"
TNDB_DIR=
if test "${ENABLE_SYS_TNDB}." == "no."; then
	if test -f "${srcdir}/tndb/tndb.c"; then
		TNDB_DIR="tndb"
	fi
fi

AC_SUBST(TNDB_DIR)

if test -n "TNDB_DIR"; then
	AC_MSG_CHECKING(for local tndb copy in $TNDB_DIR)
	AC_MSG_RESULT([yes])
	TNDB_INCLUDE="-I\$(top_srcdir)/$TNDB_DIR/"
	TNDB_LDFLAG="-L\$(top_builddir)/$TNDB_DIR/"
	CPPFLAGS="$CPPFLAGS $TNDB_INCLUDE"
    AC_CONFIG_SUBDIRS(tndb)
else
	AC_CHECK_HEADER(tndb/tndb.h,,AC_MSG_ERROR("tndb.h is missing"))
fi

AC_SUBST(TNDB_INCLUDE)
AC_SUBST(TNDB_LDFLAG)

dnl python stuff


AC_ARG_WITH(python,
[  --with-python	build python interface (unusable)],
ENABLE_PYTHON=$enableval, ENABLE_PYTHON=no)
if test "${ENABLE_PYTHON}." = "yes."; then
    AM_PATH_PYTHON
    AC_CONFIG_SUBDIRS(python)
fi

#CPPFLAGS="$CPPFLAGS -DPKGLIBDIR=\\\"\$(pkglibdir)\\\" -DSYSCONFDIR=\\\"\$(sysconfdir)\\\""
saved_prefix="$prefix"; saved_exec_prefix="$exec_prefix"
if test "X$prefix" = "XNONE"; then prefix="$ac_default_prefix"; fi
if test "X$exec_prefix" = "XNONE"; then exec_prefix="$prefix"; fi


SYSCONFDIR="`echo $sysconfdir`"
while echo ${SYSCONFDIR} | grep '\$' >/dev/null; do
        SYSCONFDIR=$(eval echo ${SYSCONFDIR});
done

AC_DEFINE_UNQUOTED(SYSCONFDIR, "$SYSCONFDIR",
        [Full path to system configuration directory (usually /etc)])
AC_SUBST(SYSCONFDIR)


PKGLIBDIR="`echo $libdir/$PACKAGE`"
while echo ${PKGLIBDIR} | grep '\$' >/dev/null; do
        PKGLIBDIR=$(eval echo ${PKGLIBDIR});
done
AC_DEFINE_UNQUOTED(PKGLIBDIR, "$PKGLIBDIR",
        [Full path to package lib directory (usually /usr/lib/$PACKAGE)])
AC_SUBST(PKGLIBDIR)

prefix="$saved_prefix"; exec_prefix="$saved_exec_prefix"

AC_CONFIG_FILES([  
		po/Makefile.in
		pkgdir/Makefile
		pkgdir/dir/Makefile
		pkgdir/hdrl/Makefile
		pkgdir/pdir/Makefile
		pkgdir/pndir/Makefile
		pkgdir/rpmdb/Makefile
                pkgdir/yum/Makefile
                pm/Makefile
                pm/rpm/Makefile
                pm/pset/Makefile
		sigint/Makefile
		vfile/Makefile
		vfile/vfff/Makefile
                python/Makefile
		conf/Makefile
		conf/poldek.conf
		doc/Makefile
		doc/homepage/Makefile
		doc/homepage/index.sgml
		doc/pl/Makefile
		Makefile
		poldek.spec
		poldek-suse.spec
		cli/Makefile
	])
AC_OUTPUT
